{% extends base_template %}

{% block body %}
<section style="background-color: #eee;">
  <div class="container my-5 py-5">
    {# Immediate test log #}
    <script>
        console.log('Immediate test log - script is running');
    </script>

    {# Flash messages #}
    {% for label, messages in app.flashes %}
      {% for message in messages %}
        <div class="alert alert-{{ label }} mt-3 text-center">
          {{ message }}
        </div>
      {% endfor %}
    {% endfor %}

{% if is_employee %}
    <div class="row d-flex justify-content-center">
      <div class="col-md-12 col-lg-10 col-xl-8">
        {# New post section #}
        <div class="card mb-4">
          <div class="card-body">
            <form method="post" action="{{ path('app_statut_new') }}" id="newPostForm" enctype="multipart/form-data" novalidate>
              <div class="form-outline mb-3">
                <textarea name="contenu" id="postContent" class="form-control" rows="3" placeholder="What's on your mind?"></textarea>
              </div>
              
              {# Media preview area #}
              <div id="mediaPreview" class="mb-3 text-center" style="display: none;">
                <div class="preview-container">
                  <img id="imagePreview" class="img-fluid rounded" style="max-height: 300px; display: none;">
                  <video id="videoPreview" class="w-100 rounded" controls style="max-height: 300px; display: none;"></video>
                  <button type="button" class="btn btn-danger btn-sm mt-2" onclick="removeMedia()">
                    <i class="fas fa-times"></i> Remove
                  </button>
                </div>
              </div>

              <div class="d-flex justify-content-between align-items-center">
                <div>
                  <input type="file" name="media" id="mediaInput" accept="image/*,video/*" style="display: none;">
                  <button type="button" class="btn btn-light" onclick="document.getElementById('mediaInput').click()">
                    <i class="fas fa-image"></i> Photo/Video
                  </button>
                  <span id="selectedFileName" class="ms-2"></span>
                </div>
                <div>
                  <button type="reset" class="btn btn-outline-secondary btn-sm" id="cancelPost">Cancel</button>
                  <button type="submit" class="btn btn-primary">Share</button>
                </div>
              </div>
            </form>
          </div>
        </div>
{% endif %}

    {% for statut in statuts %}
      <div class="card mb-4"> <!-- Use mb-4 for margin-bottom -->
        <div class="card-body">
          <div class="d-flex flex-start align-items-center">
            <img class="rounded-circle shadow-1-strong me-3"
              src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(19).webp"
              alt="avatar" width="60" height="60" />
            <div>
              <h6 class="fw-bold text-primary mb-1">{{ statut.user.prenom }}</h6>
              <p class="text-muted small mb-0">
                Shared publicly - {{ statut.dateCreation|date('Y-m-d') }}
              </p>
            </div>
          </div>

          <p class="mt-3 mb-4 pb-2">{{ statut.contenu }}</p>

          {% if statut.mediaUrl %}
            <div class="text-center">
              {% if statut.typeContenu == 'image' %}
                <img src="{{ statut.mediaUrl }}" class="img-fluid rounded mb-3" style="max-height: 500px;" alt="Post image">
              {% elseif statut.typeContenu == 'video' %}
                <video controls class="w-100 rounded mb-3" style="max-height: 500px;">
                  <source src="{{ statut.mediaUrl }}" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              {% endif %}
            </div>
          {% endif %}

          <div class="d-flex justify-content-center gap-2">
            <div class="d-flex align-items-center gap-2">
              {# Check if the user has reacted to the statut #}
              {% set userReaction = statut.getReactions()|filter(r => r.user.id == app.user.id)|first %}
              
              <form action="{{ path('statut_like', {'id': statut.id}) }}" method="post" novalidate>
                <button type="submit" class="btn btn-light btn-sm {% if userReaction and userReaction.type == 'LIKE' %}btn-success{% endif %}">
                  <i class="fas fa-thumbs-up"></i>
                </button>
              </form>
              <form action="{{ path('statut_dislike', {'id': statut.id}) }}" method="post" novalidate>
                <button type="submit" class="btn btn-light btn-sm {% if userReaction and userReaction.type == 'DISLIKE' %}btn-danger{% endif %}">
                  <i class="fas fa-thumbs-down"></i>
                </button>
              </form>
              <form action="{{ path('statut_favorite', {'id': statut.id}) }}" method="post" novalidate>
                <button type="submit" class="btn btn-light btn-sm">
                  <i class="fas fa-star"></i> Favorite
                </button>
              </form>

              {# Admin View Button #}
              {% if is_granted('ROLE_ADMIN') %}
                <a href="{{ path('app_statut_show', {'id': statut.id}) }}" class="btn btn-info btn-sm">
                  <i class="fas fa-eye me-1"></i> View
                </a>
              {% endif %}

              {# Edit and Delete buttons for the owner #}
              {% if statut.user.id == app.user.id %}
                <a href="{{ path('app_statut_edit', {'id': statut.id}) }}" class="btn btn-warning btn-sm">
                  <i class="fas fa-edit me-1"></i> Edit
                </a>

                <form action="{{ path('app_statut_delete', {'id': statut.id}) }}" method="post" onsubmit="return confirm('Are you sure?');" style="display:inline;" novalidate>
                  <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ statut.id) }}">
                  <button type="submit" class="btn btn-danger btn-sm">
                    <i class="fas fa-trash me-1"></i> Delete
                  </button>
                </form>
              {% endif %}
            </div>
          </div>

          {# Show related comments #}
          <div class="mt-3"> <!-- Add margin-top to separate comments -->
            {% include 'forum/commentaire/index.html.twig' with {'commentaires': statut.commentaires} %}
          </div>

          {# Comment submission form #}
          <div class="card-footer py-3 border-0" style="background-color: #f8f9fa;">
            <form method="post" action="{{ path('app_commentaire_new', {'statutId': statut.id}) }}" novalidate>
              <div class="d-flex flex-start w-100">
                <img class="rounded-circle shadow-1-strong me-3"
                    src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(19).webp"
                    alt="avatar" width="40" height="40" />
                <div class="form-outline w-100">
                  <textarea name="contenu" class="form-control" rows="4" style="background: #fff;"></textarea>
                  <label class="form-label">Message</label>
                </div>
              </div>

              <input type="hidden" name="_token" value="{{ csrf_token('comment-add' ~ statut.id) }}">

              <div class="float-end mt-2 pt-1">
                <input type="hidden" name="statut_id" value="{{ statut.id }}">
                <button type="submit" class="btn btn-primary btn-sm">Post comment</button>
                <button type="reset" class="btn btn-outline-primary btn-sm">Cancel</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    {% else %}
      <div class="alert alert-warning text-center">No posts available.</div>
    {% endfor %}

      </div>
    </div>
  </div>
</section>

<script>
// Test if script is loaded
console.log('Main script loaded');

// Wait for the DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded');
    
    // Get all required elements
    const mediaInput = document.getElementById('mediaInput');
    const selectedFileName = document.getElementById('selectedFileName');
    const mediaPreview = document.getElementById('mediaPreview');
    const imagePreview = document.getElementById('imagePreview');
    const videoPreview = document.getElementById('videoPreview');
    const cancelButton = document.getElementById('cancelPost');
    
    // Debug elements
    console.log('Elements:', {
        mediaInput,
        selectedFileName,
        mediaPreview,
        imagePreview,
        videoPreview,
        cancelButton
    });
    
    // Add file input change event
    if (mediaInput) {
        console.log('Adding change event to mediaInput');
        mediaInput.addEventListener('change', function(e) {
            console.log('File input changed');
            const file = this.files[0];
            console.log('Selected file:', file);
            
            if (file) {
                selectedFileName.textContent = file.name;
                mediaPreview.style.display = 'block';

                if (file.type.startsWith('image/')) {
                    console.log('Image file detected');
                    imagePreview.style.display = 'block';
                    videoPreview.style.display = 'none';
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        console.log('Image loaded');
                        imagePreview.src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                } else if (file.type.startsWith('video/')) {
                    console.log('Video file detected');
                    imagePreview.style.display = 'none';
                    videoPreview.style.display = 'block';
                    videoPreview.src = URL.createObjectURL(file);
                }
            } else {
                console.log('No file selected');
                selectedFileName.textContent = '';
                mediaPreview.style.display = 'none';
            }
        });
    }

    // Add cancel button click event
    if (cancelButton) {
        console.log('Adding click event to cancelButton');
        cancelButton.addEventListener('click', function() {
            console.log('Cancel button clicked');
            removeMedia();
            document.getElementById('postContent').value = '';
        });
    }
});

function removeMedia() {
    console.log('Removing media');
    const mediaInput = document.getElementById('mediaInput');
    const selectedFileName = document.getElementById('selectedFileName');
    const mediaPreview = document.getElementById('mediaPreview');
    const imagePreview = document.getElementById('imagePreview');
    const videoPreview = document.getElementById('videoPreview');

    mediaInput.value = '';
    selectedFileName.textContent = '';
    mediaPreview.style.display = 'none';
    imagePreview.style.display = 'none';
    videoPreview.style.display = 'none';
    if (videoPreview.src) {
        URL.revokeObjectURL(videoPreview.src);
    }
}
</script>
{% endblock %}

{% block javascripts %}
{{ parent() }}
{% endblock %}
